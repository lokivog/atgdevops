filter {

	if [type] == "app" {

		multiline {
		    #match the jboss timestamp and combine all lines up to the next jboss timestamp
	  		pattern => "(?>\d\d){1,2}-(?:0?[1-9]|1[0-2])-(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])[T ](?:2[0123]|[01]?[0-9])(?::?(?:(?:[0-5][0-9]|60)(?:[:.,][0-9]+)?))"
	  		negate => true
	  		what => "previous"
		}

		grok {
		    #match jboss log message as [timestamp] [loglevel] [className] [message]
			#TODO can't get the patterns dir to pick up the JBOSSLOGMSG
			#patterns_dir => "PATTERNS_DIR"
			patterns_dir => "./patterns"
            #match => [ "message", "%{JBOSSLOGMSG}"]
            #match => ["message", "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}[%{WORD:thread}]%{SPACE}%{JAVACLASS:className}%{SPACE}-%{SPACE}%{GREEDYDATA:message}"]
            match => ["message", "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}\[%{DATA:thread}\]%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:className}%{SPACE}-%{SPACE}%{GREEDYDATA:classMessage}"]
		 	add_tag => ["standard_msg"]
		 	tag_on_failure => ["grokparsefailure_appmsg"]
		}
		
		if [level] not in ["ERROR","WARN"] {
			#if log message is not ERROR or WARN then drop
			#comment out to log all messages
			#drop {}
		}

		#ruby {
  			#trim a multiline message to "N" lines
  			#default to 15 lines
  		#	code => "event['message'] = event['message'][0].lines.to_a[0,15].join;"
		#}

		date { 
	  		#normalize logstash timestamp from jboss timestamp
	  		match => ["timestamp","yyyy-MM-dd HH:mm:ss,SSS"]
		}

	}
}